<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classbase_1_1SequencedTaskRunnerHandle" kind="class" language="C++" prot="public">
    <compoundname>base::SequencedTaskRunnerHandle</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classbase_1_1SequencedTaskRunnerHandle_1a500c8d6535cbd0fdf32c928051a4fb07" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classbase_1_1SequencedTaskRunner" kindref="compound">SequencedTaskRunner</ref> &gt;</type>
        <definition>std::shared_ptr&lt;SequencedTaskRunner&gt; base::SequencedTaskRunnerHandle::task_runner_</definition>
        <argsstring></argsstring>
        <name>task_runner_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base/threading/sequenced_task_runner_handle.h" line="24" column="19" bodyfile="base/threading/sequenced_task_runner_handle.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classbase_1_1SequencedTaskRunnerHandle_1a564128377143387bfd3925e4fbfca5be" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::shared_ptr&lt; <ref refid="classbase_1_1SequencedTaskRunner" kindref="compound">SequencedTaskRunner</ref> &gt; &amp;</type>
        <definition>static const std::shared_ptr&lt;SequencedTaskRunner&gt;&amp; base::SequencedTaskRunnerHandle::Get</definition>
        <argsstring>()</argsstring>
        <name>Get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base/threading/sequenced_task_runner_handle.h" line="12" column="32"/>
      </memberdef>
      <memberdef kind="function" id="classbase_1_1SequencedTaskRunnerHandle_1ac4bd8c758c7433724a41b64c7c287aa9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool base::SequencedTaskRunnerHandle::IsSet</definition>
        <argsstring>()</argsstring>
        <name>IsSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base/threading/sequenced_task_runner_handle.h" line="13" column="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classbase_1_1SequencedTaskRunnerHandle_1a18f11f2b546c17bf17e4d51e6c744e7f" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>base::SequencedTaskRunnerHandle::SequencedTaskRunnerHandle</definition>
        <argsstring>(std::shared_ptr&lt; SequencedTaskRunner &gt; task_runner)</argsstring>
        <name>SequencedTaskRunnerHandle</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classbase_1_1SequencedTaskRunner" kindref="compound">SequencedTaskRunner</ref> &gt;</type>
          <declname>task_runner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base/threading/sequenced_task_runner_handle.h" line="15" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classbase_1_1SequencedTaskRunnerHandle_1abc60700dedf7772452a015e10acd8356" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>base::SequencedTaskRunnerHandle::~SequencedTaskRunnerHandle</definition>
        <argsstring>()</argsstring>
        <name>~SequencedTaskRunnerHandle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base/threading/sequenced_task_runner_handle.h" line="17" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classbase_1_1SequencedTaskRunnerHandle_1a8886f226df9d265fa543a2f87f230d3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>base::SequencedTaskRunnerHandle::SequencedTaskRunnerHandle</definition>
        <argsstring>(const SequencedTaskRunnerHandle &amp;)=delete</argsstring>
        <name>SequencedTaskRunnerHandle</name>
        <param>
          <type>const <ref refid="classbase_1_1SequencedTaskRunnerHandle" kindref="compound">SequencedTaskRunnerHandle</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base/threading/sequenced_task_runner_handle.h" line="19" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classbase_1_1SequencedTaskRunnerHandle_1affd050dbc0696b454e433cef3e44a4e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classbase_1_1SequencedTaskRunnerHandle" kindref="compound">SequencedTaskRunnerHandle</ref> &amp;</type>
        <definition>SequencedTaskRunnerHandle&amp; base::SequencedTaskRunnerHandle::operator=</definition>
        <argsstring>(const SequencedTaskRunnerHandle &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classbase_1_1SequencedTaskRunnerHandle" kindref="compound">SequencedTaskRunnerHandle</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base/threading/sequenced_task_runner_handle.h" line="20" column="29"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="base/threading/sequenced_task_runner_handle.h" line="9" column="32" bodyfile="base/threading/sequenced_task_runner_handle.h" bodystart="9" bodyend="25"/>
    <listofallmembers>
      <member refid="classbase_1_1SequencedTaskRunnerHandle_1a564128377143387bfd3925e4fbfca5be" prot="public" virt="non-virtual"><scope>base::SequencedTaskRunnerHandle</scope><name>Get</name></member>
      <member refid="classbase_1_1SequencedTaskRunnerHandle_1ac4bd8c758c7433724a41b64c7c287aa9" prot="public" virt="non-virtual"><scope>base::SequencedTaskRunnerHandle</scope><name>IsSet</name></member>
      <member refid="classbase_1_1SequencedTaskRunnerHandle_1affd050dbc0696b454e433cef3e44a4e3" prot="public" virt="non-virtual"><scope>base::SequencedTaskRunnerHandle</scope><name>operator=</name></member>
      <member refid="classbase_1_1SequencedTaskRunnerHandle_1a18f11f2b546c17bf17e4d51e6c744e7f" prot="public" virt="non-virtual"><scope>base::SequencedTaskRunnerHandle</scope><name>SequencedTaskRunnerHandle</name></member>
      <member refid="classbase_1_1SequencedTaskRunnerHandle_1a8886f226df9d265fa543a2f87f230d3f" prot="public" virt="non-virtual"><scope>base::SequencedTaskRunnerHandle</scope><name>SequencedTaskRunnerHandle</name></member>
      <member refid="classbase_1_1SequencedTaskRunnerHandle_1a500c8d6535cbd0fdf32c928051a4fb07" prot="private" virt="non-virtual"><scope>base::SequencedTaskRunnerHandle</scope><name>task_runner_</name></member>
      <member refid="classbase_1_1SequencedTaskRunnerHandle_1abc60700dedf7772452a015e10acd8356" prot="public" virt="non-virtual"><scope>base::SequencedTaskRunnerHandle</scope><name>~SequencedTaskRunnerHandle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
